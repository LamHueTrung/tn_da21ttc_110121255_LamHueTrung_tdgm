<div class="card shadow mb-4" id="page-top">
    <div class="card-header py-3">
        <a href="#" class="btn btn-darks" data-bs-toggle="modal" data-bs-target="#createRoomModal" id="addRoomBtn">Thêm phòng thủ công</a>
        <a href="#" class="btn btn-darks" id="importRoomsBtn">Thêm bằng file</a>
        <a href="https://drive.google.com/uc?export=download&id=13F3bTREz1FosoMlazIxvwc2yB_Zg2pGt" class="btn btn-darks" id="importRoomsBtn">File Mẫu</a>
    </div>
    <div class="card-header py-3">
        <h6 class="m-0 font-weight-bold text-primary">Danh sách phòng</h6>
    </div>
    <div class="card-body">
        <div class="table-responsive">
            <table class="table table-bordered" id="dataTable" width="100%" cellspacing="0">
                <thead>
                    <tr>
                        <th>#</th>
                        <th>Tên phòng</th>
                        <th>Vị trí</th>
                        <th>Số lượng thiết bị</th>
                        <th>Sức chứa (Người)</th>
                        <th>Thao tác</th>
                    </tr>
                </thead>
                <tbody id="roomList">
                    {{#each rooms}}
                    <tr>
                        <td>{{increment @index}}</td>
                        <td>{{this.name}}</td>
                        <td>{{this.location.name}}</td>
                        <td>{{#if this.deviceItems.length}} {{this.deviceItems.length}} {{else}} 0 {{/if}}</td>
                        <td>{{this.capacity}}</td>
                        <td>
                            <div class="btn-group">
                                <button class="btn btn-sm" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                    <img width="30px" src="/img/dotsMenu.png" alt="">
                                </button>
                                <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                                    <a class="dropdown-item" href="/deviceToRoom/viewDevices/{{this._id}}"><i class="fa-brands fa-openid"></i> Xem thiết bị</a>
                                    <a class="dropdown-item" href="/deviceToRoom/addDevices/{{this._id}}"><i class="fa-solid fa-plus"></i> Thêm thiết bị</a>
                                    <a class="dropdown-item" onclick="updateRoom('{{this._id}}')"><i class="fa-regular fa-pen-to-square"></i> Sửa phòng</a>
                                    <a class="dropdown-item" onclick="deleteRoom('{{this._id}}', {{this.deviceItems.length}})"><i class="fa-regular fa-trash-can"></i> Xoá phòng</a>
                                </div>
                            </div>
                        </td>
                    </tr>
                    {{/each }}
                </tbody>
            </table>
            <button type="button" onclick="javascript:history.back()" class="btn btn-secondary">Quay lại</button>
        </div>
    </div>
</div>

<!-- Modal tạo phòng thủ công -->
<div class="modal fade" id="createRoomModal" tabindex="-1" role="dialog" aria-labelledby="createRoomModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="createRoomModalLabel">Thêm phòng mới</h5>
                <button type="button" class="btn-close close" data-bs-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="createRoomForm">
                    <div class="form-group">
                        <label for="createRoomName">Tên phòng</label>
                        <input type="text" class="form-control" id="createRoomName" name="name" placeholder="Ví dụ: Phòng A42.201" required>
                        <div id="createRoomNameError" class="text-danger"></div>
                    </div>
                    <div class="form-group">
                        <label for="createRoomLocation">Vị trí</label>
                        <div id="createLocationContainer">
                            <select class="form-control" id="createRoomLocation" name="locationId">
                                <option value="">Chọn tòa nhà</option>
                            </select>
                            <input type="text" class="form-control" id="createRoomLocationName" name="locationName" style="display: none;" placeholder="Nhập tên tòa nhà">
                        </div>
                        <div id="createRoomLocationError" class="text-danger"></div>
                    </div>
                    <div class="form-group">
                        <label for="createRoomCapacity">Sức chứa</label>
                        <input type="number" class="form-control" id="createRoomCapacity" name="capacity" required placeholder="sứa chứa từ 1 đến 100" min="1" max="100">
                        <div id="createRoomCapacityError" class="text-danger"></div>
                    </div>
                    <div class="form-group">
                        <label for="createRoomDescription">Mô tả</label>
                        <textarea class="form-control" id="createRoomDescription" name="description"></textarea>
                        <div id="createRoomDescriptionError" class="text-danger"></div>
                    </div>
                    <button type="submit" class="btn btn-system btn-submit">Tạo phòng</button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Modal chỉnh sửa phòng -->
<div class="modal fade" id="editRoomModal" tabindex="-1" role="dialog" aria-labelledby="editRoomModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editRoomModalLabel">Chỉnh sửa phòng</h5>
                <button type="button" class="btn-close close" data-bs-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="editRoomForm">
                    <input type="hidden" id="roomId">
                    <div class="form-group">
                        <label for="roomName">Tên phòng</label>
                        <input type="text" class="form-control" id="roomName" required>
                        <div id="roomNameError" class="text-danger"></div>
                    </div>
                    <div class="form-group">
                        <label for="roomLocation">Vị trí</label>
                        <div id="editLocationContainer">
                            <select class="form-control" id="roomLocation" name="locationId">
                                <option value="">Chọn tòa nhà</option>
                            </select>
                            <input type="text" class="form-control" id="roomLocationName" name="locationName" style="display: none;" placeholder="Nhập tên tòa nhà">
                        </div>
                        <div id="roomLocationError" class="text-danger"></div>
                    </div>
                    <div class="form-group">
                        <label for="roomCapacity">Sức chứa</label>
                        <input type="number" class="form-control" id="roomCapacity" required min="1">
                        <div id="roomCapacityError" class="text-danger"></div>
                    </div>
                    <div class="form-group">
                        <label for="roomDescription">Mô tả</label>
                        <textarea class="form-control" id="roomDescription" name="description"></textarea>
                        <div id="roomDescriptionError" class="text-danger"></div>
                    </div>
                    <button type="submit" class="btn btn-system btn-submit">Lưu</button>
                </form>
            </div>
        </div>
    </div>
</div>

<style>
    .modal-content {
        border-radius: 12px;
        box-shadow: 14px 15px 4px rgba(0, 0, 0, 0.2);
        background: #ffffff;
        transition: all 0.3s ease-in-out;
    }
    .modal-header {
        background: #010101;
        color: white;
        border-top-left-radius: 12px;
        border-top-right-radius: 12px;
        padding: 15px;
    }
    .modal-header .close {
        color: white;
        font-size: 24px;
        opacity: 0.8;
        transition: 0.3s;
    }
    .modal-header .close:hover {
        opacity: 1;
    }
    .modal-body {
        padding: 20px;
    }
    .form-control {
        border-radius: 8px;
        border: 1px solid #ccc;
        padding: 10px;
        transition: 0.3s;
    }
    .form-group label {
        font-weight: bold;
        color: #333;
    }
</style>

<script>
document.addEventListener("DOMContentLoaded", function () {
    async function loadLocations(selectId, containerId, inputId, isEditModal = false, selectedLocationId = null) {
        const select = document.getElementById(selectId);
        const container = document.getElementById(containerId);
        const input = document.getElementById(inputId);

        if (!select || !container || !input) {
            console.error(`One or more elements not found: ${selectId}, ${containerId}, ${inputId}`);
            Swal.fire('Lỗi', 'Không tìm thấy các thành phần giao diện', 'error');
            return;
        }

        try {
            const response = await fetch('/api/room/locations', {
                headers: { 'Authorization': `Bearer ${sessionStorage.getItem('token')}` }
            });
            const data = await response.json();
            console.log('API /api/room/locations response:', data);

            if (data.success && data.locations && data.locations.length > 0) {
                select.innerHTML = '<option value="">Chọn tòa nhà</option>';
                data.locations.forEach(loc => {
                    const option = document.createElement('option');
                    option.value = loc._id;
                    option.textContent = loc.name;
                    if (isEditModal && selectedLocationId === loc._id) {
                        option.selected = true;
                    }
                    select.appendChild(option);
                });
                select.style.display = 'block';
                input.style.display = 'none';
                input.required = false;
            } else {
                select.style.display = 'none';
                input.style.display = 'block';
                input.required = true;
                Swal.fire('Thông báo', 'Chưa có vị trí tòa nhà', 'warning');
            }
        } catch (error) {
            console.error('Error loading locations:', error);
            Swal.fire('Thông báo', 'Không lấy được thông tin vị trí toà nhà', 'warning');
        }
    }

    // Gọi loadLocations khi modal mở
    $('#createRoomModal').on('show.bs.modal', function () {
        loadLocations('createRoomLocation', 'createLocationContainer', 'createRoomLocationName');
    });

    $('#editRoomModal').on('show.bs.modal', function () {
        loadLocations('roomLocation', 'editLocationContainer', 'roomLocationName', true);
    });

    // Xử lý nút Import file
    document.getElementById("importRoomsBtn").addEventListener("click", async function () {
        const { value: file } = await Swal.fire({
            title: "Thêm phòng",
            text: "Hãy tải tệp tin CSV chứa thông tin phòng để thêm vào hệ thống.",
            input: "file",
            inputAttributes: { accept: ".csv, .xlsx" },
            showCancelButton: true,
            confirmButtonText: "Tải lên",
        });

        if (file) {
            try {
                const formData = new FormData();
                formData.append("file", file);

                const response = await fetch("/api/room/import", {
                    method: "POST",
                    body: formData,
                });

                const data = await response.json();
                if (!data.success) {
                    let errorMessage = data.message || "Có lỗi xảy ra trong quá trình nhập tệp.";
                    if (data.errors && data.errors.length > 0) {
                        let errorMessages = data.errors.map(error => {
                            let errorDetails = [];
                            if (error.error.name) errorDetails.push(`<b>Tên phòng</b>: ${error.error.name}`);
                            if (error.error.location) errorDetails.push(`<b>Địa điểm</b>: ${error.error.location}`);
                            if (error.error.capacity) errorDetails.push(`<b>Sức chứa</b>: ${error.error.capacity}`);
                            if (error.row) errorDetails.push(`<b>Dòng lỗi</b>: ${JSON.stringify(error.row)}`);
                            return errorDetails.join("<br>");
                        }).join("<hr>");
                        errorMessage = errorMessages;
                    }
                    await Swal.fire({
                        title: "Lỗi khi nhập tệp!",
                        html: errorMessage,
                        icon: "error",
                        confirmButtonText: "OK"
                    });
                } else {
                    await Swal.fire({
                        title: "Thành công!",
                        text: `Đã thêm ${data.inserted} phòng thành công!`,
                        icon: "success",
                        confirmButtonText: "OK"
                    });
                    window.location.href = "/deviceToRoom/home";
                }
            } catch (error) {
                console.error("Error:", error);
                Swal.fire('Lỗi', 'Có lỗi xảy ra, vui lòng thử lại', 'error');
            }
        }
    });

    // Xử lý tạo phòng thủ công
    document.getElementById("createRoomForm").addEventListener("submit", async function (event) {
        event.preventDefault();

        ['createRoomNameError', 'createRoomLocationError', 'createRoomCapacityError', 'createRoomDescriptionError'].forEach(id => {
            document.getElementById(id).textContent = '';
        });

        const newRoom = {
            name: document.getElementById("createRoomName").value,
            capacity: parseInt(document.getElementById("createRoomCapacity").value, 10),
            description: document.getElementById("createRoomDescription").value
        };

        const select = document.getElementById("createRoomLocation");
        if (select.style.display !== 'none') {
            newRoom.locationId = select.value;
        } else {
            newRoom.locationName = document.getElementById("createRoomLocationName").value;
        }

        try {
            const response = await fetch('/api/room/create', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'Authorization': `Bearer ${sessionStorage.getItem('token')}`
                },
                body: JSON.stringify(newRoom)
            });

            const data = await response.json();

            if (data.success) {
                Swal.fire('Thành công!', data.message, 'success').then(() => {
                    $('#createRoomModal').modal('hide');
                    location.reload();
                });
            } else {
                if (data.errors) {
                    document.getElementById('createRoomNameError').textContent = data.errors.name || '';
                    document.getElementById('createRoomLocationError').textContent = data.errors.locationId || data.errors.locationName || '';
                    document.getElementById('createRoomCapacityError').textContent = data.errors.capacity || '';
                    document.getElementById('createRoomDescriptionError').textContent = data.errors.description || '';
                }
                Swal.fire('Lỗi', data.message || 'Không thể tạo phòng.', 'error');
            }
        } catch (error) {
            console.error('Error creating room:', error);
            Swal.fire('Lỗi', 'Có lỗi xảy ra, vui lòng thử lại!', 'error');
        }
    });

    // Xóa phòng
    window.deleteRoom = function (roomId, deviceItemsCount) {
        Swal.fire({
            title: "Bạn muốn xoá phòng này?",
            icon: "warning",
            showCancelButton: true,
            confirmButtonText: "Đồng ý",
            cancelButtonText: "Huỷ"
        }).then((result) => {
            if (deviceItemsCount > 0) {
                Swal.fire({
                    title: "Phòng này đang chứa thiết bị!",
                    text: "Bạn muốn tiếp tục xoá?",
                    icon: "warning",
                    confirmButtonText: "Đồng ý",
                    showCancelButton: true,
                    cancelButtonText: "Huỷ"
                }).then((result) => {
                    if (result.isConfirmed) {
                        fetch(`/api/room/delete/${roomId}`, { method: 'DELETE' })
                            .then(response => response.ok ? response.json() : Promise.reject('Lỗi khi thực hiện hành động'))
                            .then(data => {
                                if (data.success) {
                                    Swal.fire({
                                        title: `Phòng đã được xoá!`,
                                        icon: 'success',
                                        confirmButtonText: 'OK'
                                    }).then(() => { if (data.success) location.reload(); });
                                } else {
                                    Swal.fire({
                                        title: 'Không thể thực hiện hành động!',
                                        text: data.message || 'Đã xảy ra lỗi không xác định.',
                                        icon: 'error',
                                        confirmButtonText: 'OK'
                                    });
                                }
                            })
                            .catch(error => Swal.fire({ title: 'Có lỗi xảy ra!', icon: 'error', confirmButtonText: 'OK' }));
                    }
                });
            } else {
                if (result.isConfirmed) {
                    fetch(`/api/room/delete/${roomId}`, { method: 'DELETE' })
                        .then(response => response.ok ? response.json() : Promise.reject('Lỗi khi thực hiện hành động'))
                        .then(data => {
                            if (data.success) {
                                Swal.fire({
                                    title: `Phòng đã được xoá!`,
                                    icon: 'success',
                                    confirmButtonText: 'OK'
                                    }).then(() => { if (data.success) location.reload(); });
                            } else {
                                Swal.fire({
                                    title: 'Không thể thực hiện hành động!',
                                    text: data.message || 'Đã xảy ra lỗi không xác định.',
                                    icon: 'error',
                                    confirmButtonText: 'OK'
                                });
                            }
                        })
                        .catch(error => Swal.fire({ title: 'Có lỗi xảy ra!', icon: 'error', confirmButtonText: 'OK' }));
                }
            }
        });
    };

    // Cập nhật phòng
    window.updateRoom = async function (roomId) {
        try {
            const response = await fetch(`/api/room/getById/${roomId}`);
            const data = await response.json();

            if (data.success && data.room) {
                document.getElementById("roomId").value = data.room._id;
                document.getElementById("roomName").value = data.room.name;
                document.getElementById("roomCapacity").value = data.room.capacity;
                document.getElementById("roomDescription").value = data.room.description || '';

                // Tải danh sách locations và chọn location hiện tại
                await loadLocations('roomLocation', 'editLocationContainer', 'roomLocationName', true, data.room.location._id);

                $("#editRoomModal").modal("show");
            } else {
                Swal.fire("Lỗi", "Không thể tải dữ liệu phòng!", "error");
            }
        } catch (error) {
            console.error("Lỗi khi lấy thông tin phòng:", error);
            Swal.fire("Lỗi", "Có lỗi xảy ra, vui lòng thử lại!", "error");
        }
    };

    // Xử lý submit form cập nhật phòng
    document.getElementById("editRoomForm").addEventListener("submit", async function (event) {
        event.preventDefault();

        ['roomNameError', 'roomLocationError', 'roomCapacityError', 'roomDescriptionError'].forEach(id => {
            document.getElementById(id).textContent = '';
        });

        const roomId = document.getElementById("roomId").value;
        const updatedRoom = {
            name: document.getElementById("roomName").value,
            capacity: parseInt(document.getElementById("roomCapacity").value, 10),
            description: document.getElementById("roomDescription").value
        };

        const select = document.getElementById("roomLocation");
        if (select.style.display !== 'none') {
            updatedRoom.locationId = select.value;
        } else {
            updatedRoom.locationName = document.getElementById("roomLocationName").value;
        }

        try {
            const response = await fetch(`/api/room/update/${roomId}`, {
                method: "PUT",
                headers: {
                    "Content-Type": "application/json",
                    "Authorization": `Bearer ${sessionStorage.getItem('token')}`
                },
                body: JSON.stringify(updatedRoom),
            });

            const data = await response.json();

            if (data.success) {
                Swal.fire("Thành công!", "Thông tin phòng đã được cập nhật.", "success").then(() => {
                    $("#editRoomModal").modal("hide");
                    location.reload();
                });
            } else {
                if (data.errors) {
                    document.getElementById('roomNameError').textContent = data.errors.name || '';
                    document.getElementById('roomLocationError').textContent = data.errors.locationId || data.errors.locationName || '';
                    document.getElementById('roomCapacityError').textContent = data.errors.capacity || '';
                    document.getElementById('roomDescriptionError').textContent = data.errors.description || '';
                }
                Swal.fire("Lỗi", data.message || "Không thể cập nhật phòng.", "error");
            }
        } catch (error) {
            console.error("Lỗi cập nhật phòng:", error);
            Swal.fire("Lỗi", "Có lỗi xảy ra, vui lòng thử lại!", "error");
        }
    });
});
</script>
