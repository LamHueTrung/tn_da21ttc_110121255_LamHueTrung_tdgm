<div class="row add-user mb-4">
    <h1 class="title-add-user text-center mb-4">Tạo đơn mượn thiết bị</h1>

    <div class="card-body">
        <div class="table-responsive">
            <h3 class="mt-4">Danh sách thiết bị</h3>
            <!-- Bảng danh sách thiết bị có thể chọn -->
            <table class="table table-bordered" id="dataTable" width="100%" cellspacing="0">
                <thead>
                    <tr>
                        <th></th>
                        <th>Số lượng mượn</th>
                        <th>Tên thiết bị</th>
                        <th>Loại thiết bị</th>
                        <th>Số lượng có thể mượn</th>
                        <th>Hình ảnh</th>
                    </tr>
                </thead>
                <tbody id="deviceList">
                    {{#each devices}}
                        <tr>
                            <td>
                                <input style="width: 38px;height: 25px;" type="checkbox" class="checkbox" 
                                data-id="{{this._id}}" 
                                data-name="{{ this.name}}"
                                data-category="{{ this.category}}"
                                data-quantity=""
                                ></td>
                            <td>
                                <input style="width: 70px;" type="number">
                            </td>
                            <td>{{ this.name}}</td>
                            <td>{{ this.category}}</td>
                            <td>{{ this.available_quantity }}</td>
                            <td> <img style="width: 50px;" src="{{this.images}}" alt=""></td>
                        </tr>
                    {{/each}}
                </tbody>
            </table>
        </div>
        
        <div class="d-flex mt-2" style="float: right;">
            <button type="button" onclick="javascript:history.back()" class="btn btn-secondary btn-previou">Quay lại</button>
            <button id="createOrderBtn" type="submit" class="btn btn-system btn-submit ml-2">Tiếp tục</button>
        </div>

    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        const checkboxes = document.querySelectorAll(".checkbox");
        const createOrderBtn = document.getElementById("createOrderBtn");

        let datas = [];

        // Cập nhật data-quantity khi nhập số lượng
        document.querySelectorAll("tbody tr").forEach(row => {
            let quantityInput = row.querySelector("input[type='number']");
            let checkbox = row.querySelector(".checkbox");
            let availableQuantity = parseInt(row.querySelector("td:nth-child(5)").innerText);

            if (quantityInput && checkbox) {
                quantityInput.addEventListener("input", function () {
                    let quantity = parseInt(this.value) || 0;
                    checkbox.dataset.quantity = quantity;

                    // Kiểm tra nếu số lượng mượn vượt quá số lượng có thể mượn
                    if (quantity > availableQuantity) {
                        Swal.fire({
                            icon: "warning",
                            title: "Lỗi số lượng",
                            text: `Số lượng mượn không thể lớn hơn ${availableQuantity}!`,
                        });
                        this.value = availableQuantity;
                        checkbox.dataset.quantity = availableQuantity;
                    }
                });
            }
        });

        // Xử lý khi chọn checkbox
        checkboxes.forEach((checkbox) => {
            checkbox.addEventListener("change", function () {
                const deviceId = this.dataset.id;
                const quantity = parseInt(this.dataset.quantity) || 0;

                if (this.checked) {
                    datas.push({ deviceId, quantity });
                } else {
                    removeDevice(deviceId);
                }

                console.log(datas);
            });
        });

        function removeDevice(id) {
            datas = datas.filter(device => device.deviceId !== id);
        }

        // Xử lý khi nhấn "Tiếp tục"
        createOrderBtn.addEventListener("click", function () {
            let isValid = true;
            let hasDeviceSelected = false;

            datas = [];
            checkboxes.forEach((checkbox) => {
                if (checkbox.checked) {
                    hasDeviceSelected = true;
                    let deviceId = checkbox.dataset.id;
                    let quantity = parseInt(checkbox.dataset.quantity) || 0;
                    let row = checkbox.closest("tr");
                    let availableQuantity = parseInt(row.querySelector("td:nth-child(5)").innerText);

                    // Kiểm tra số lượng hợp lệ
                    if (quantity <= 0) {
                        isValid = false;
                        Swal.fire({
                            icon: "error",
                            title: "Lỗi số lượng",
                            text: "Số lượng mượn phải lớn hơn 0!",
                        });
                        return;
                    }

                    if (quantity > availableQuantity) {
                        isValid = false;
                        Swal.fire({
                            icon: "error",
                            title: "Lỗi số lượng",
                            text: `Số lượng mượn không thể lớn hơn ${availableQuantity}!`,
                        });
                        return;
                    }

                    datas.push({ deviceId, quantity });
                }
            });

            if (!hasDeviceSelected) {
                Swal.fire({
                    icon: "error",
                    title: "Lỗi",
                    text: "Vui lòng chọn ít nhất một thiết bị!",
                });
                return;
            }

            if (isValid) {
                localStorage.setItem("data", JSON.stringify(datas));
                window.location.href = "/borrowRepay/addNewChoiceTeacher";
            }
        });
    });
</script>

