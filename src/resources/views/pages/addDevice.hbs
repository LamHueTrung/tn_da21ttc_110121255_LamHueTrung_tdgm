<div class="row add-user mb-4">
    <h1 class="title-add-user text-center mb-4">Thêm mới thiết bị</h1>

    <!-- Chọn phương thức nhập -->
    <div class="d-flex justify-content-center mb-4">
        <button class="btn btn-darks me-2" id="manualBtn">Tạo thủ công</button>
        <button class="btn btn-choicefile" id="fileBtn">Tạo bằng file</button>
    </div>

    <!-- Form thêm thủ công -->
    <div id="manualForm" style="display: none;">
        <form id="createDeviceForm" enctype="multipart/form-data" class="col-md-6 offset-md-3">
            <div class="mb-3">
                <label class="form-label">Tên thiết bị</label>
                <input type="text" class="form-control" name="name" id="name" placeholder="Example: Remote">
                <div class="text-danger" id="nameError"></div>
            </div>

            <div class="mb-3">
                <label class="form-label">Mô tả</label>
                <textarea class="form-control" name="description" id="description"></textarea>
                <div class="text-danger" id="descriptionError"></div>
            </div>

            <div class="mb-3">
                <label class="form-label">Số lượng</label>
                <input type="number" class="form-control" name="quantity" id="quantity" placeholder="Example: 1-50">
                <div class="text-danger" id="quantityError"></div>
            </div>

            <div class="mb-3">
                <label class="form-label">Loại thiết bị</label>
                <select class="form-control" name="category" id="category">
                    <option value="Máy tính">Máy tính</option>
                    <option value="Máy chiếu">Máy chiếu</option>
                    <option value="Bảng trắng">Bảng trắng</option>
                    <option value="Loa">Loa</option>
                    <option value="Thiết bị mạng">Thiết bị mạng</option>
                    <option value="Khác">Khác</option>
                </select>
                <div class="text-danger" id="categoryError"></div>
            </div>

            <div class="mb-3">
                <label class="form-label">Ảnh thiết bị</label>
                <input type="file" class="form-control" name="images" id="images">
                <div class="text-danger" id="imgDeviceError"></div>
            </div>

            <div class="d-flex" style="float: right;">
                <button type="submit" class="btn btn-system btn-submit" id="submitBtn">Tạo mới</button>
                <button type="button" onclick="javascript:history.back()" class="btn btn-secondary btn-previou">Quay lại</button>
            </div>
        </form>
    </div>

    <!-- Form thêm bằng file -->
    <div id="fileForm" style="display: none;">
        <form id="importDeviceForm" enctype="multipart/form-data" class="col-md-6 offset-md-3">
            <div class="mb-3">
                <label class="form-label">Tải file (CSV)</label>
                <input type="file" class="form-control" name="file" id="file" accept=".csv">
                <div class="text-danger" id="fileError"></div>
                <div class="text-danger" id="rowError"></div>
            </div>

            <div class="d-flex" style="float: right;">
                <button type="submit" class="btn btn-system btn-submit">Tải lên</button>
                <button type="button" onclick="javascript:history.back()" class="btn btn-secondary btn-previou">Quay lại</button>
            </div>
        </form>

    </div>
</div>

<script>
document.addEventListener("DOMContentLoaded", function () {
    const manualBtn = document.getElementById("manualBtn");
    const fileBtn = document.getElementById("fileBtn");
    const manualForm = document.getElementById("manualForm");
    const fileForm = document.getElementById("fileForm");

    // Kiểm tra nếu phần tử tồn tại trước khi gán sự kiện
    if (manualBtn && fileBtn && manualForm && fileForm) {
        // Ẩn cả hai form ban đầu
        manualForm.style.display = "none";
        fileForm.style.display = "none";

        // Khi bấm "Add Manually" thì hiển thị form thủ công, ẩn form file
        manualBtn.addEventListener("click", function() {
            manualForm.style.display = "block";
            fileForm.style.display = "none";
        });

        // Khi bấm "Import from File" thì hiển thị form file, ẩn form thủ công
        fileBtn.addEventListener("click", function() {
            manualForm.style.display = "none";
            fileForm.style.display = "block";
        });
    }

    document.getElementById("createDeviceForm").addEventListener("submit", async function (event) {
        event.preventDefault();
        const formData = new FormData(this);

        try {
            const response = await fetch("/api/device/create", {
                method: "POST",
                body: formData
            });

            const data = await response.json();

            document.querySelectorAll(".text-danger").forEach(el => el.innerText = "");

            if (!data.success) {
                Object.keys(data.errors).forEach(key => {
                    document.getElementById(`${key}Error`).innerText = data.errors[key];
                });
            } else {
                Swal.fire({
                    title: "Thành công!",
                    text: "Thiết bị đã được tạo thành công!",
                    icon: "success",
                    confirmButtonText: "OK"
                }).then(() => {
                    window.location.href = "/deviceManger/home";
                });
            }
        } catch (error) {
            console.error("Error:", error);
            Swal.fire('Lỗi', 'Có lỗi xảy ra, vui lòng thử lại', 'error');
        }
    });

    document.getElementById("importDeviceForm").addEventListener("submit", async function (event) {
        event.preventDefault();  // Ngăn chặn form gửi theo mặc định
        const formData = new FormData(this);  // Lấy dữ liệu từ form

        try {
            // Gửi yêu cầu POST với dữ liệu form
            const response = await fetch("/api/device/import", {
                method: "POST",
                body: formData
            });

            const data = await response.json();

            console.log(data);
            // Xóa tất cả lỗi cũ
            document.querySelectorAll(".text-danger").forEach(el => el.innerText = "");

            // Kiểm tra nếu không thành công
            if (!data.success) {
                // Hiển thị lỗi nếu có
                if (data.errors && data.errors.length > 0) {
                    // Lặp qua các lỗi và hiển thị
                    data.errors.forEach(error => {
                        document.getElementById("rowError").innerText = JSON.stringify(error.row, null, 2);
                    });
                }
            } else {
                Swal.fire({
                    title: "Thành công!",
                    text: "Tệp tin đã được tải lên thành công!",
                    icon: "success",
                    confirmButtonText: "OK"
                }).then(() => {
                    window.location.href = "/deviceManger/home";  // Điều hướng sau khi thành công
                });
            }
        } catch (error) {
            console.error("Error:", error);
            Swal.fire('Lỗi', 'Có lỗi xảy ra, vui lòng thử lại', 'error');
        }
    });
});
</script>