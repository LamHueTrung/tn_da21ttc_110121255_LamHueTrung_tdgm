const mongoose = require('mongoose');
const Location = require("./Location");

const roomSchema = new mongoose.Schema({
    name: {
        type: String,
        required: true,
        unique: true,
        trim: true
    },
    location: {  // ðŸ”¥ LiÃªn káº¿t phÃ²ng vá»›i `Location`
        type: mongoose.Schema.Types.ObjectId,
        ref: "Location",
        required: false
    },
    capacity: { // Sá»‘ lÆ°á»£ng thiáº¿t bá»‹ tá»‘i Ä‘a trong phÃ²ng
        type: Number,
        required: false,
        min: 1
    },
    description: {
        type: String,
        default: '',
        trim: true
    },
    deviceItems: [
        {
            type: mongoose.Schema.Types.ObjectId,
            ref: "DeviceItem"
        }
    ],
    created_at: {
        type: Date,
        default: Date.now
    },
    updated_at: {
        type: Date,
        default: Date.now
    }
});

roomSchema.statics.ensureMainWarehouse = async function () {
    let mainWarehouse = await this.findOne({ name: 'Kho chÃ­nh' });
    if (!mainWarehouse) {
        const location = await Location.ensureMainWarehouse(); // ðŸ›  await á»Ÿ Ä‘Ã¢y
        mainWarehouse = await this.create({
            name: 'Kho chÃ­nh',
            description: 'Kho máº·c Ä‘á»‹nh cho thiáº¿t bá»‹',
            location: location._id // âœ… Láº¥y _id sau khi Ä‘Ã£ await
        });
    }

    return mainWarehouse;
};

// Middleware cáº­p nháº­t `updated_at`
roomSchema.pre('save', function (next) {
    this.updated_at = Date.now();
    next();
});

const Room = mongoose.model('Room', roomSchema);
module.exports = Room;
